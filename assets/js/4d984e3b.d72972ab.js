"use strict";(self.webpackChunkdocusaurus_docs=self.webpackChunkdocusaurus_docs||[]).push([[3],{9172:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>d});var a=n(5893),s=n(1151);const r={sidebar_position:2},c="Extend functionality - Detailed",i={id:"Mimir/Overview/react-redux-detailed",title:"Extend functionality - Detailed",description:"It's not as complicated as it first seems",source:"@site/docs/Mimir/Overview/react-redux-detailed.md",sourceDirName:"Mimir/Overview",slug:"/Mimir/Overview/react-redux-detailed",permalink:"/documents/docs/Mimir/Overview/react-redux-detailed",draft:!1,unlisted:!1,editUrl:"https://github.com/mimir-org/documents/tree/main/docs/Mimir/Overview/react-redux-detailed.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"mimirDocs",previous:{title:"Extend Functionality",permalink:"/documents/docs/Mimir/Overview/react-redux"},next:{title:"React redux pitfalls",permalink:"/documents/docs/Mimir/Overview/react-redux-pitfalls"}},o={},d=[{value:"It&#39;s not as complicated as it first seems",id:"its-not-as-complicated-as-it-first-seems",level:2},{value:"Step 1: Create a New Slice File",id:"step-1-create-a-new-slice-file",level:3},{value:"Step 2: Import Dependencies",id:"step-2-import-dependencies",level:3},{value:"Step 3: Define Initial State",id:"step-3-define-initial-state",level:3},{value:"Step 4: Create the Slice",id:"step-4-create-the-slice",level:3},{value:"Step 5: Export Actions",id:"step-5-export-actions",level:3},{value:"Step 6: Export Reducer",id:"step-6-export-reducer",level:3},{value:"Step 7: Update Root Reducer",id:"step-7-update-root-reducer",level:3},{value:"Step 8: Create and Export Selectors",id:"step-8-create-and-export-selectors",level:3},{value:"Step 9: Use Actions in Components",id:"step-9-use-actions-in-components",level:3},{value:"New Redux component",id:"new-redux-component",level:2},{value:"DemoTab.tsx",id:"demotabtsx",level:3},{value:"Adding DemoTab to InspectorModule.tsx",id:"adding-demotab-to-inspectormoduletsx",level:3}];function l(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"extend-functionality---detailed",children:"Extend functionality - Detailed"}),"\n",(0,a.jsx)(t.h2,{id:"its-not-as-complicated-as-it-first-seems",children:"It's not as complicated as it first seems"}),"\n",(0,a.jsx)(t.p,{children:"Extending the functionality in redux is the hardest part of this process,\nat the end there is an example of how to use Redux in your component,\nthat part is fairly easy."}),"\n",(0,a.jsx)(t.h3,{id:"step-1-create-a-new-slice-file",children:"Step 1: Create a New Slice File"}),"\n",(0,a.jsxs)(t.p,{children:["Create a new file for your slice, e.g., ",(0,a.jsx)(t.code,{children:"newFeatureSlice.ts"}),", inside the ",(0,a.jsx)(t.code,{children:"src/client/src/store/"})," directory."]}),"\n",(0,a.jsx)(t.h3,{id:"step-2-import-dependencies",children:"Step 2: Import Dependencies"}),"\n",(0,a.jsx)(t.p,{children:"Import the necessary modules from Redux Toolkit and any other dependencies you may need."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-typescript",children:'import { createSlice, PayloadAction } from "@reduxjs/toolkit";\n'})}),"\n",(0,a.jsx)(t.h3,{id:"step-3-define-initial-state",children:"Step 3: Define Initial State"}),"\n",(0,a.jsx)(t.p,{children:"Define the initial state for your slice. This can be an object, array, or any other data type."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-typescript",children:"const initialState = {\n  data: null,\n  loading: false,\n  error: null,\n};\n"})}),"\n",(0,a.jsx)(t.h3,{id:"step-4-create-the-slice",children:"Step 4: Create the Slice"}),"\n",(0,a.jsxs)(t.p,{children:["Use the ",(0,a.jsx)(t.code,{children:"createSlice"})," function to create a slice. Define your reducers within the ",(0,a.jsx)(t.code,{children:"reducers"})," object."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-typescript",children:'const newFeatureSlice = createSlice({\n  name: "newFeature",\n  initialState,\n  reducers: {\n    fetchDataStart: (state) => {\n      state.loading = true;\n    },\n    fetchDataSuccess: (state, action: PayloadAction<any>) => {\n      state.data = action.payload;\n      state.loading = false;\n    },\n    fetchDataFailure: (state, action: PayloadAction<string>) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n  },\n});\n'})}),"\n",(0,a.jsx)(t.h3,{id:"step-5-export-actions",children:"Step 5: Export Actions"}),"\n",(0,a.jsxs)(t.p,{children:["Export the actions generated by ",(0,a.jsx)(t.code,{children:"createSlice"}),"."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-typescript",children:"export const { fetchDataStart, fetchDataSuccess, fetchDataFailure } =\n  newFeatureSlice.actions;\n"})}),"\n",(0,a.jsx)(t.h3,{id:"step-6-export-reducer",children:"Step 6: Export Reducer"}),"\n",(0,a.jsx)(t.p,{children:"Export the reducer so it can be combined with other reducers in the store."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-typescript",children:"export default newFeatureSlice.reducer;\n"})}),"\n",(0,a.jsx)(t.h3,{id:"step-7-update-root-reducer",children:"Step 7: Update Root Reducer"}),"\n",(0,a.jsxs)(t.p,{children:["In your ",(0,a.jsx)(t.code,{children:"commonReducer.ts"})," or equivalent, import the new reducer and add it to the root reducer."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-typescript",children:'import newFeatureReducer from "./newFeatureSlice";\n\nconst rootReducer = combineReducers({\n  // ...other reducers,\n  newFeature: newFeatureReducer,\n});\n'})}),"\n",(0,a.jsx)(t.h3,{id:"step-8-create-and-export-selectors",children:"Step 8: Create and Export Selectors"}),"\n",(0,a.jsxs)(t.p,{children:["Create selectors to read specific pieces of state. You can place these in a ",(0,a.jsx)(t.code,{children:"selectors.ts"})," file or within your slice file."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-typescript",children:"export const selectNewFeatureData = (state: RootState) => state.newFeature.data;\n"})}),"\n",(0,a.jsx)(t.h3,{id:"step-9-use-actions-in-components",children:"Step 9: Use Actions in Components"}),"\n",(0,a.jsxs)(t.p,{children:["Now you can use the actions and selectors in your React components using ",(0,a.jsx)(t.code,{children:"useDispatch"})," and ",(0,a.jsx)(t.code,{children:"useSelector"}),"."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-typescript",children:"const dispatch = useDispatch();\nconst data = useSelector(selectNewFeatureData);\n\ndispatch(fetchDataStart());\n"})}),"\n",(0,a.jsx)(t.h2,{id:"new-redux-component",children:"New Redux component"}),"\n",(0,a.jsxs)(t.p,{children:["Below is a demo component that can serve as a new tab in the ",(0,a.jsx)(t.code,{children:"InspectorModule"}),". This component, named ",(0,a.jsx)(t.code,{children:"DemoTab"}),", demonstrates how to properly handle state changes in Redux without direct state mutations."]}),"\n",(0,a.jsx)(t.h3,{id:"demotabtsx",children:"DemoTab.tsx"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-tsx",children:'import React, { useState } from "react";\nimport { useDispatch, useSelector } from "react-redux";\nimport { updateProject } from "../../../store/reducers/projectReducer"; // Import your projectReducer\nimport { RootState } from "../../../store"; // Import your RootState\n\nconst DemoTab: React.FC = () => {\n  const dispatch = useDispatch();\n  const projectState = useSelector((state: RootState) => state.project); // Replace with your project state selector\n  const [newLabel, setNewLabel] = useState("");\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setNewLabel(e.target.value);\n  };\n\n  const updateLabel = () => {\n    // Create a copy of the projectState and update the label\n    const updatedProjectState = {\n      ...projectState,\n      label: newLabel,\n    };\n\n    // Dispatch the updated project state\n    dispatch(updateProject(updatedProjectState));\n  };\n\n  return (\n    <div>\n      <h2>Demo Tab</h2>\n      <input\n        type="text"\n        placeholder="New Label"\n        value={newLabel}\n        onChange={handleInputChange}\n      />\n      <button onClick={updateLabel}>Update Label</button>\n    </div>\n  );\n};\n\nexport default DemoTab;\n'})}),"\n",(0,a.jsx)(t.h3,{id:"adding-demotab-to-inspectormoduletsx",children:"Adding DemoTab to InspectorModule.tsx"}),"\n",(0,a.jsxs)(t.p,{children:["To add this new ",(0,a.jsx)(t.code,{children:"DemoTab"})," to the ",(0,a.jsx)(t.code,{children:"InspectorModule"}),", you can update the ",(0,a.jsx)(t.code,{children:"InspectorModule.tsx"})," file as follows:"]}),"\n",(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsxs)(t.li,{children:["Import ",(0,a.jsx)(t.code,{children:"DemoTab"})," at the top of your ",(0,a.jsx)(t.code,{children:"InspectorModule.tsx"}),":"]}),"\n"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:'import DemoTab from "./tabs/DemoTab";\n'})}),"\n",(0,a.jsxs)(t.ol,{start:"2",children:["\n",(0,a.jsxs)(t.li,{children:["Add a new case for ",(0,a.jsx)(t.code,{children:"DemoTab"})," in the ",(0,a.jsx)(t.code,{children:"switch"})," statement that renders the tabs:"]}),"\n"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-tsx",children:'switch (selectedTab) {\n  case "admin":\n    return <AdminTab />;\n  case "attribute":\n    return <AttributeTab />;\n  case "terminal":\n    return <TerminalTab />;\n  case "demo": // New case\n    return <DemoTab />;\n  default:\n    return null;\n}\n'})}),"\n",(0,a.jsxs)(t.ol,{start:"3",children:["\n",(0,a.jsxs)(t.li,{children:["Update the ",(0,a.jsx)(t.code,{children:"useState"})," and ",(0,a.jsx)(t.code,{children:"onTabChange"})," to include the new 'demo' tab:"]}),"\n"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:'const [selectedTab, setSelectedTab] = useState<\n  "admin" | "attribute" | "terminal" | "demo"\n>("admin");\n\nconst onTabChange = (value: "admin" | "attribute" | "terminal" | "demo") => {\n  setSelectedTab(value);\n};\n'})}),"\n",(0,a.jsxs)(t.ol,{start:"4",children:["\n",(0,a.jsxs)(t.li,{children:["Add a new button or tab UI element to switch to the ",(0,a.jsx)(t.code,{children:"DemoTab"}),"."]}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>i,a:()=>c});var a=n(7294);const s={},r=a.createContext(s);function c(e){const t=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),a.createElement(r.Provider,{value:t},e.children)}}}]);