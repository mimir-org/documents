"use strict";(self.webpackChunkdocusaurus_docs=self.webpackChunkdocusaurus_docs||[]).push([[412],{9984:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var i=t(5893),s=t(1151);const r={title:"Setup",sidebar_position:2},o=void 0,a={id:"Tyle/setup",title:"Setup",description:"Where Can I Find the Code?",source:"@site/docs/Tyle/setup.md",sourceDirName:"Tyle",slug:"/Tyle/setup",permalink:"/documents/docs/Tyle/setup",draft:!1,unlisted:!1,editUrl:"https://github.com/mimir-org/documents/tree/main/docs/Tyle/setup.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Setup",sidebar_position:2},sidebar:"tyleDocs",previous:{title:"Introduction",permalink:"/documents/docs/Tyle/intro"},next:{title:"Current state",permalink:"/documents/docs/Tyle/current-state"}},l={},d=[{value:"Where Can I Find the Code?",id:"where-can-i-find-the-code",level:2},{value:"Setup",id:"setup",level:2},{value:"Database",id:"database",level:3},{value:"Application",id:"application",level:3},{value:"App settings",id:"app-settings",level:4},{value:"General",id:"general",level:5},{value:"Authentication settings",id:"authentication-settings",level:5},{value:"Database settings",id:"database-settings",level:5},{value:"Reference Data Library settings",id:"reference-data-library-settings",level:5},{value:"Create a user",id:"create-a-user",level:4},{value:"Database kill scripts",id:"database-kill-scripts",level:2},{value:"Deploying Tyle",id:"deploying-tyle",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",h5:"h5",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"where-can-i-find-the-code",children:"Where Can I Find the Code?"}),"\n",(0,i.jsxs)(n.p,{children:["The source code for Tyle can be found on Github: ",(0,i.jsx)(n.a,{href:"https://github.com/mimir-org/tyle",children:"https://github.com/mimir-org/tyle"})]}),"\n",(0,i.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,i.jsx)(n.h3,{id:"database",children:"Database"}),"\n",(0,i.jsx)(n.p,{children:"Tyle needs a SQL database to work. For setting this up in your dev environment you can follow these steps."}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Download and install ",(0,i.jsx)(n.a,{href:"https://www.docker.com/",children:"Docker"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Create a new .yaml file and paste the following code."}),"\n"]}),"\n",(0,i.jsxs)(t,{children:[(0,i.jsx)("summary",{children:"docker-compose.yaml"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'version: "3.8"\n\nservices:\n  mssql:\n    image: "mcr.microsoft.com/mssql/server:2017-CU8-ubuntu"\n    hostname: "mssql"\n    container_name: mssql\n    ports:\n      - "127.0.0.1:1433:1433"\n    volumes:\n      - mssql:/var/opt/mssql\n    environment:\n      - ACCEPT_EULA=Y\n      - MSSQL_SA_PASSWORD=P4ssw0rd1\n      - MSSQL_PID=Standard\n    networks:\n      - type_library_network\n    restart: unless-stopped\n\nvolumes:\n  mssql:\n    driver: local\n\nnetworks:\n  type_library_network:\n    driver: bridge\n'})})]}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:"Then run the docker-compose file from the command line. Use docker-compose up -d from the folder where the file is\nlocated."}),"\n",(0,i.jsx)(n.li,{children:"Once it is up and running, you should be able to access the database using our database management\napplication of choice:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"- DataSource=mssql\n- Host=localhost\n- Port=1433\n- User=sa\n- Password=P4ssw0rd1\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["If you are unfamiliar with using the docker command line tool. An option is to use\nthe ",(0,i.jsx)(n.a,{href:"https://www.docker.com/products/docker-desktop/",children:"Docker Desktop application"})," to manage docker containers."]})}),"\n",(0,i.jsx)(n.h3,{id:"application",children:"Application"}),"\n",(0,i.jsx)(n.p,{children:"Once the database is set up, you can run the application locally."}),"\n",(0,i.jsx)(n.h4,{id:"app-settings",children:"App settings"}),"\n",(0,i.jsxs)(n.p,{children:["Before you can run the Tyle server you need to create a local app settings file. This file needs to be\nnamed ",(0,i.jsx)(n.strong,{children:"appsettings.Development.json"})," and placed in the ",(0,i.jsx)(n.code,{children:"src/server/Tyle.Api/"})," folder. Use the existing\nappsettings.json file as a template."]}),"\n",(0,i.jsxs)(t,{children:[(0,i.jsx)("summary",{children:"Environment variables for the server"}),(0,i.jsx)(n.p,{children:"To set environment variables for server in development, edit the appsettings.Development.json file. For production build, you have\nto set the environment variables into the application container itself. * denotes a required environment variable."}),(0,i.jsx)(n.h5,{id:"general",children:"General"}),(0,i.jsxs)(n.p,{children:["* ",(0,i.jsx)(n.code,{children:"ASPNETCORE_ENVIRONMENT"})," - Set .NET core environment"]}),(0,i.jsxs)(n.p,{children:["* ",(0,i.jsx)(n.code,{children:"BaseIri"})," - The base IRI used when generating IRIs for IMF types. Should not include a trailing slash (/). E.g. ",(0,i.jsx)(n.a,{href:"http://tyle.imftools.com",children:"http://tyle.imftools.com"})]}),(0,i.jsxs)(n.p,{children:["* ",(0,i.jsx)(n.code,{children:"CorsConfiguration__ValidOrigins"})," - Comma separated string of valid origins for CORS.\nE.g. ",(0,i.jsx)(n.a,{href:"http://localhost:3000,https://mimirorg.com",children:"http://localhost:3000,https://mimirorg.com"})]}),(0,i.jsx)(n.h5,{id:"authentication-settings",children:"Authentication settings"}),(0,i.jsxs)(n.p,{children:["* ",(0,i.jsx)(n.code,{children:"MimirorgAuthSettings___ApplicationName"})," - The name of the auth application. Used for auth apps title."]}),(0,i.jsxs)(n.p,{children:["* ",(0,i.jsx)(n.code,{children:"MimirorgAuthSettings__JwtKey"})," - The secret used for generating jwt keys, 64 characters."]}),(0,i.jsxs)(n.p,{children:["* ",(0,i.jsx)(n.code,{children:"MimirorgAuthSettings__JwtIssuer"})," - The url for Jwt issuer."]}),(0,i.jsxs)(n.p,{children:["* ",(0,i.jsx)(n.code,{children:"MimirorgAuthSettings__JwtAudience"})," - The url for Jwt audience."]}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"MimirorgAuthSettings__RequireConfirmedAccount"})," - Is it required to confirm accout. Default true."]}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"MimirorgAuthSettings__JwtExpireMinutes"})," - The length of valid access token in minutes. Default 15."]}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"MimirorgAuthSettings__JwtRefreshExpireMinutes"})," - The length of valid refresh token in minutes. Default 1440."]}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"MimirorgAuthSettings__MaxFailedAccessAttempts"})," - The number of failed access attempts before locking account. Default 5."]}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"MimirorgAuthSettings__DefaultLockoutMinutes"})," - The length of lockout. Default 1440."]}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"MimirorgAuthSettings__RequireDigit"})," - Require digits in password. Default true."]}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"MimirorgAuthSettings__RequireUppercase"})," - Require uppercase in password. Default true."]}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"MimirorgAuthSettings__RequireNonAlphanumeric"})," - Require none alphanumeric in password. Default false."]}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"MimirorgAuthSettings__RequiredLength"})," - Require length of password. Default 10."]}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"MimirorgAuthSettings__EmailKey"})," - The sendgrid email key. Required if MimirorgAuthSettings__RequireConfirmedAccount."]}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"MimirorgAuthSettings__EmailSecret"})," - The sendgrid email secret. Required if\nMimirorgAuthSettings__RequireConfirmedAccount."]}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"MimirorgAuthSettings__QrWidth"})," - The width of the Qr Code. Default 300."]}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"MimirorgAuthSettings__QrHeight"})," - The height of the Qr Code. Default 300."]}),(0,i.jsxs)(n.p,{children:["* ",(0,i.jsx)(n.code,{children:"MimirorgAuthSettings__DatabaseConfiguration__DataSource"})," - Identifier for auth database server."]}),(0,i.jsxs)(n.p,{children:["* ",(0,i.jsx)(n.code,{children:"MimirorgAuthSettings__DatabaseConfiguration__Port"})," - Port of auth database server. E.g. 1443."]}),(0,i.jsxs)(n.p,{children:["* ",(0,i.jsx)(n.code,{children:"MimirorgAuthSettings__DatabaseConfiguration__InitialCatalog"})," - Auth database name."]}),(0,i.jsxs)(n.p,{children:["* ",(0,i.jsx)(n.code,{children:"MimirorgAuthSettings__DatabaseConfiguration__DbUser"})," - Server application auth database username, must be db owner\non given catalog."]}),(0,i.jsxs)(n.p,{children:["* ",(0,i.jsx)(n.code,{children:"MimirorgAuthSettings__DatabaseConfiguration__Password"})," - Server application auth database password."]}),(0,i.jsx)(n.h5,{id:"database-settings",children:"Database settings"}),(0,i.jsxs)(n.p,{children:["* ",(0,i.jsx)(n.code,{children:"DatabaseConfiguration__DataSource"})," - Identifier for database server"]}),(0,i.jsxs)(n.p,{children:["* ",(0,i.jsx)(n.code,{children:"DatabaseConfiguration__Port"})," - Port of database server. E.g. 1443"]}),(0,i.jsxs)(n.p,{children:["* ",(0,i.jsx)(n.code,{children:"DatabaseConfiguration__InitialCatalog"})," - Database name"]}),(0,i.jsxs)(n.p,{children:["* ",(0,i.jsx)(n.code,{children:"DatabaseConfiguration__DbUser"})," - Server application database username, must be db owner on given catalog"]}),(0,i.jsxs)(n.p,{children:["* ",(0,i.jsx)(n.code,{children:"DatabaseConfiguration__Password"})," - Server application database password"]}),(0,i.jsx)(n.h5,{id:"reference-data-library-settings",children:"Reference Data Library settings"}),(0,i.jsxs)(n.p,{children:["The following settings must be provided for the Azure App instance running the Tyle server for properly authenticating\nwith the downstream API used to fetch reference data. The current API used for this in Tyle is either PCA or Common Library. See\n",(0,i.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/entra/identity-platform/scenario-web-api-call-api-app-configuration?tabs=aspnetcore",children:"Configure a web API that calls web APIs"}),"\nfor more information."]}),(0,i.jsxs)(n.p,{children:["These variables are only needed if ",(0,i.jsx)(n.code,{children:"UseCommonLib"})," is set to true. Otherwise, Tyle will fetch reference data from PCA."]}),(0,i.jsxs)(n.p,{children:["* ",(0,i.jsx)(n.code,{children:"AzureAd__Instance"})]}),(0,i.jsxs)(n.p,{children:["* ",(0,i.jsx)(n.code,{children:"AzureAd__ClientId"})]}),(0,i.jsxs)(n.p,{children:["* ",(0,i.jsx)(n.code,{children:"AzureAd__ClientSecret"})," - Should be stored in a key vault"]}),(0,i.jsxs)(n.p,{children:["* ",(0,i.jsx)(n.code,{children:"AzureAd__Domain"})]}),(0,i.jsxs)(n.p,{children:["* ",(0,i.jsx)(n.code,{children:"AzureAd__TenantId"})]}),(0,i.jsxs)(n.p,{children:["* ",(0,i.jsx)(n.code,{children:"CommonLibApi__BaseUrl"})," - The base url for the Common Library API."]}),(0,i.jsxs)(n.p,{children:["* ",(0,i.jsx)(n.code,{children:"CommonLibApi__Scopes"})]}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"UseCommonLib"})," - Set to true if Common Library should be used (in an Equinor setting)."]})]}),"\n",(0,i.jsxs)(t,{children:[(0,i.jsx)("summary",{children:"Environment variables for the client"}),(0,i.jsx)(n.p,{children:"To set environment variables for client in development, edit the .env file. For production build, you have to set the\nenvironment variables into the container itself. You can override the .env with a .env.local file. This file is not\nincluded in git repo. * is required."}),(0,i.jsxs)(n.p,{children:["* ",(0,i.jsx)(n.code,{children:"VITE_API_BASE_URL"})," - Url to backend server"]}),(0,i.jsxs)(n.p,{children:["* ",(0,i.jsx)(n.code,{children:"VITE_TYLE_VERSION"})," - The version number of Tyle"]})]}),"\n",(0,i.jsx)(n.h4,{id:"create-a-user",children:"Create a user"}),"\n",(0,i.jsx)(n.p,{children:"The first thing you need to do after installation is to start the tyle backend, the database, and the frontend. Then\nregister a new user through the frontend. After registration, you will be told to wait for an email, which will never\ncome, because it is located here:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Make sure to have the database, client and server running."}),"\n",(0,i.jsx)(n.li,{children:"Register a new user through the client logon screen."}),"\n",(0,i.jsx)(n.li,{children:"At the end of registration you will need to validate your email. Since this is in a local environment the mail will\nbe stored in this path:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"/mimirorg/typelibrary/src/server/Tyle.Api/bin/Debug/net7.0/Data/Mail\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"4",children:["\n",(0,i.jsx)(n.li,{children:"Copy the code from the txt-file generated in the mail folder. And you should be able to log in."}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"It may be useful to sort by last modified so that the last email you received is at the top."})}),"\n",(0,i.jsx)(n.p,{children:"The first user that is created in the development environment is given administrator rights. In production, the first\nuser registered must be given administrator access manually in the authentication database by following these steps."}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Query the AspNetUsers table. Save your ID."}),"\n",(0,i.jsx)(n.li,{children:"Query the AspNetRoles table. Save the Administrator ID."}),"\n",(0,i.jsx)(n.li,{children:"Insert both IDs into the AspNetUserRoles table. You have now granted the administrator role to your user. You will need\nto log out and back in again for this change to take effect."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"database-kill-scripts",children:"Database kill scripts"}),"\n",(0,i.jsx)(n.p,{children:"It is sometimes useful to reset the database to an empty state during development. The following SQL scripts can be\nused to do this."}),"\n",(0,i.jsxs)(t,{children:[(0,i.jsx)("summary",{children:(0,i.jsx)(n.p,{children:"Tyle db kill script"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"----------------------------------------------------------------------\n--Script som kobler fra alt og alle som er tilkoblet\n--Deretter slettes databasen\nUSE [master];\nDECLARE @kill varchar(8000) = '';\nSELECT @kill = @kill + 'kill ' + CONVERT(varchar(5), session_id) + ';'\nFROM sys.dm_exec_sessions\nWHERE database_id = db_id('Tyle')\nEXEC(@kill);\nDROP DATABASE Tyle\nCREATE Database Tyle\n---------------------------------------------------------------------\n----------------------------------------------------------------------\n"})})]}),"\n",(0,i.jsxs)(t,{children:[(0,i.jsx)("summary",{children:(0,i.jsx)(n.p,{children:"MimirorgAuthentication db kill script"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"---------------------------------------------------------------------\n----------------------------------------------------------------------\n--Script som kobler fra alt og alle som er tilkoblet\n--Deretter slettes databasen\nUSE [master];\nDECLARE @kill varchar(8000) = '';\nSELECT @kill = @kill + 'kill ' + CONVERT(varchar(5), session_id) + ';'\nFROM sys.dm_exec_sessions\nWHERE database_id = db_id('MimirorgAuthentication')\nEXEC(@kill);\nDROP DATABASE MimirorgAuthentication\nCREATE Database MimirorgAuthentication\n---------------------------------------------------------------------\n----------------------------------------------------------------------\n"})})]}),"\n",(0,i.jsx)(n.h2,{id:"deploying-tyle",children:"Deploying Tyle"}),"\n",(0,i.jsx)(n.p,{children:"The current deployment method for Tyle is building Docker images of the backend and frontend and running these with app\nservices in Azure. There are Github actions in the repository for building these Docker images. The triggers for these\nactions are either pushing to the stage branch or creating a new release."}),"\n",(0,i.jsx)(n.p,{children:"The environment variables can be set in the Azure portal, on the App service running the containers."})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>o});var i=t(7294);const s={},r=i.createContext(s);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);