"use strict";(self.webpackChunkdocusaurus_docs=self.webpackChunkdocusaurus_docs||[]).push([[636],{247:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var i=t(5893),o=t(1151);const s={},r="New Components and Functionality",a={id:"Mimir/Remaining work/new-components",title:"New Components and Functionality",description:"When it comes to displaying elements, it's important that elements are only visually removed, not actually",source:"@site/docs/Mimir/Remaining work/new-components.md",sourceDirName:"Mimir/Remaining work",slug:"/Mimir/Remaining work/new-components",permalink:"/documents/docs/Mimir/Remaining work/new-components",draft:!1,unlisted:!1,editUrl:"https://github.com/mimir-org/documents/tree/main/docs/Mimir/Remaining work/new-components.md",tags:[],version:"current",frontMatter:{},sidebar:"mimirDocs",previous:{title:"Remaining work",permalink:"/documents/docs/category/remaining-work"},next:{title:"Hooks documentation",permalink:"/documents/docs/category/hooks-documentation"}},d={},l=[{value:"Main Menu",id:"main-menu",level:2},{value:"Visual Filter",id:"visual-filter",level:2},{value:"Library Module",id:"library-module",level:2},{value:"Block View",id:"block-view",level:2},{value:"Inspector Module",id:"inspector-module",level:2},{value:"Explorer Panel",id:"explorer-panel",level:2},{value:"Lock and Delete",id:"lock-and-delete",level:2},{value:"Connection frontend to Backend",id:"connection-frontend-to-backend",level:2}];function c(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"new-components-and-functionality",children:"New Components and Functionality"}),"\n",(0,i.jsx)(n.admonition,{title:"Note",type:"caution",children:(0,i.jsx)(n.p,{children:"When it comes to displaying elements, it's important that elements are only visually removed, not actually\nremoved from the tree, as this will cause the project state to change via React Flow."})}),"\n",(0,i.jsx)(n.h2,{id:"main-menu",children:"Main Menu"}),"\n",(0,i.jsxs)(n.p,{children:["On the start screen today, there are several buttons that do nothing:\n",(0,i.jsx)(n.img,{src:t(2817).Z+"",width:"612",height:"822"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Open project: is not implemented."}),"\n",(0,i.jsx)(n.li,{children:"Create project: is partially implemented but instantiation project constructor is hardcoded."}),"\n",(0,i.jsx)(n.li,{children:"Save project: is partially implemented. We can save projects, but not updated existing projects."}),"\n",(0,i.jsx)(n.li,{children:"Close project: not implemented."}),"\n",(0,i.jsx)(n.li,{children:"Import project: not implemented."}),"\n",(0,i.jsx)(n.li,{children:"Export project: not implemented."}),"\n",(0,i.jsx)(n.li,{children:"Subproject functionality: no implemented."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"visual-filter",children:"Visual Filter"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:t(5933).Z+"",width:"560",height:"364"})}),"\n",(0,i.jsx)(n.p,{children:"The visual filter is currently not working; this menu should open a modal that allows you to turn on and off edges in\nthe graph in the drawing window. You should choose whether to display parent-child edges or edges between different\nnodes (think left/right edges). It should (or at least used to) be possible to turn animations on and off for edges\nbetween nodes."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:t(7993).Z+"",width:"1406",height:"474"})}),"\n",(0,i.jsx)(n.h2,{id:"library-module",children:"Library Module"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:t(3413).Z+"",width:"804",height:"852"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:t(8538).Z+"",width:"776",height:"688"})}),"\n",(0,i.jsx)(n.p,{children:"You can't filter in this module (on the right in Mimir) today. This should be a simple task to implement."}),"\n",(0,i.jsx)(n.h2,{id:"block-view",children:"Block View"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:t(3287).Z+"",width:"1894",height:"1048"})}),"\n",(0,i.jsx)(n.p,{children:"In block view, it should be possible to rotate the viewport 90 degrees so that those who are used to drawing from top to\nbottom can use this view (this view is called electromode)."}),"\n",(0,i.jsx)(n.p,{children:"Sorting of terminals would also be nice here, as a Block can have many terminals, and to avoid edges between\nnodes getting tangled."}),"\n",(0,i.jsx)(n.h2,{id:"inspector-module",children:"Inspector Module"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.img,{src:t(1065).Z+"",width:"1436",height:"264"}),"\nIn the inspector module, it should be possible to edit block data. Name, description, attributes etc.\nThis is in progress. And has been remade based on the components and structure used in the Library module. But a lot of\nwork still remains. None of the forms for input has been implemented."]}),"\n",(0,i.jsx)(n.h2,{id:"explorer-panel",children:"Explorer Panel"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:t(9486).Z+"",width:"982",height:"748"})}),"\n",(0,i.jsx)(n.p,{children:'This is the panel on the left in Mimir\'s menu; this needs to be re-implemented. It should only display the entire\ndrawing area as a tree structure, think of the document tree structure in your IDE for example. It should also be\npossible to turn off the display of nodes and the entire "tree" in this menu.'}),"\n",(0,i.jsx)(n.h2,{id:"lock-and-delete",children:"Lock and Delete"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:t(9823).Z+"",width:"872",height:"86"})}),"\n",(0,i.jsx)(n.p,{children:"Delete should remove the node from the drawing area; a reset button would probably be nice here too."}),"\n",(0,i.jsx)(n.p,{children:"Lock doesn't need to be considered right now, as this functionality is to lock it so that others can't edit the node\nwhile you're working on it. Since Mimir hasn't implemented web-sockets today, this button is also not in use. As it\ndoesn't push any state changes to the backend."}),"\n",(0,i.jsx)(n.h2,{id:"connection-frontend-to-backend",children:"Connection frontend to Backend"}),"\n",(0,i.jsx)(n.p,{children:"Connecting to backend is possible in the current state but will cast a few exceptions. In order to get it up and running\nagain is to first of all remove the query for company(as this is removed from Tyle) and ensure that data models in\nfrontend are updated. And that all logic tied to company is removed."}),"\n",(0,i.jsx)(n.p,{children:"There is also a known issue with mapping connectors on blocks coming from frontend. This has to do with connector class\nbeing abstract. This issue may be a more fundamental issue that require a lot of changes in the models both in front and\nbackend."}),"\n",(0,i.jsx)(n.p,{children:"Note that there are several methods in backend that will respond with no or limited data as the whole Mimir project is\nin a transitional state. The same goes for code in frontend, where a lot has been commented out. This can be revealed\nwhen running a lint command in frontend."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npm run lint\n"})}),"\n",(0,i.jsx)(n.admonition,{title:"Note",type:"caution",children:(0,i.jsx)(n.p,{children:"Given our limited knowledge there will probably be more issues tied to connecting frontend, backend and DB together."})})]})}function h(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},3287:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/electroMode-6b49b7dce1bbb6a20db7828673910caf.png"},3413:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/explorerMenu-9786ebc992a7100c7f121fd097a7559e.png"},8538:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/explorerMenu2-e4ae624caa6b0c50f347d1eedc36ac26.png"},9486:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/explorerPanel-f3cc9e36c5c5415e2ac3c6d3874c3a06.png"},9823:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/lockDelete-1cb2d1815de6c188eb88a06fa4157cff.png"},2817:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/projectMenu-74745fe484054181f5b3d13126f19a06.png"},1065:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/terminalAttributes-42073977a48c8b9cff8d0fe7b2fd4f48.png"},5933:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/visualFilter-deedc7cb2e011dca19ce5b9bed5576d1.png"},7993:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/visualFilter2-d421747076c0ca477d3f2fb735c9a765.png"},1151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>r});var i=t(7294);const o={},s=i.createContext(o);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);